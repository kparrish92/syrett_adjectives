library(lme4)

task_2 = read.csv(here("data", "tidy", "task_2_tidy.csv"))

em_adj_df = task_2 %>% 
  filter(type == "Emotion Adj?-Conserv") %>% 
  filter(answers == 1 | answers == 0) %>% 
  group_by(answers, animacy_condtion, frame_content_condition) %>% 
  summarize(n = n()) %>% 
  filter(answers == 1)

tot = task_2 %>% 
  filter(type == "Emotion Adj?-Conserv") %>% 
  filter(answers == 1 | answers == 0) %>% 
  group_by(animacy_condtion, frame_content_condition) %>% 
  summarize(total = n())

## PCT of emotion adjectives for each of 4 conditons  
em_table = left_join(em_adj_df, tot, by = c("animacy_condtion", "frame_content_condition")) %>% 
  mutate(percent = n/total)

###------------------

adj_df = task_2 %>% 
  filter(type == "Adjective?") %>% 
  filter(answers == 1 | answers == 0) %>% 
  group_by(answers, animacy_condtion, frame_content_condition) %>% 
  summarize(n = n()) %>% 
  filter(answers == 1)

tot_a = task_2 %>% 
  filter(type == "Adjective?") %>% 
  filter(answers == 1 | answers == 0) %>% 
  group_by(animacy_condtion, frame_content_condition) %>% 
  summarize(total = n())

## PCT of emotion adjectives for each of 4 conditons  
adj_table = left_join(adj_df, tot_a, by = c("animacy_condtion", "frame_content_condition")) %>% 
  mutate(percent = n/total)

#a) proportion of emotion adjective guesses (out of ALL guesses - sum adj and non-adj guesses)
# -compare guesses for target trials across conditions (look for main effects and interactions)

### State the total adjective guesses out of ALL trials

total_adjective_guesses = nrow(task_2 %>% filter(type == "Adjective?" & answers == 1))/nrow(task_2 %>% filter(type == "Adjective?"))

### State the total guesses that were emotional adjectives out of ALL trials 

total_emotion_adjective_guesses = nrow(task_2 %>% filter(type == "Emotion Adj?-Conserv" & answers == 1))/nrow(task_2 %>% filter(type == "Emotion Adj?-Conserv"))

# b) proportion of emotion adjective guesses (out of all ADJ guesses)
# -compare guesses for target trials across conditions (look for main effects and interactions)
# -compare guesses between target trials within each condition (Chi-sq analysis?)

prop_emotional = nrow(task_2 %>% filter(type == "Emotion Adj?-Conserv" & answers == 1))/nrow(task_2 %>% filter(type == "Adjective?" & answers == 1))

# Do we want to examine the probability of selecting an emotional adjective as a 
# function of animacy, frame and their interaction?

## removed 1224 - 1208 nas  
em_adj_df=task_2 %>% filter(type == "Emotion Adj?-Conserv") %>% 
  filter(answers == 1 | answers == 0) %>% 
  write.csv(here("data", "tidy", "em_adj_df.csv"))


brms::brm(as.numeric(answers) ~ animacy_condtion*frame_content_condition, family = binomial(link = "logit"), data = em_adj_df, 
          file = here("data", "models", "study_2_b.RDS"))

mod_b_2 = read_rds(here("data", "models", "study_2_b.RDS"))

conditional_effects(mod_b_2)

null_model = glm(as.numeric(answers) ~ 1, data = em_adj_df, family = "binomial")
frame_model = glm(as.numeric(answers) ~ frame_content_condition, data = em_adj_df, family = "binomial")
ac_model = glm(as.numeric(answers) ~ frame_content_condition + animacy_condtion, data = em_adj_df, family = "binomial")
int_model = glm(as.numeric(answers) ~ frame_content_condition*animacy_condtion, data = em_adj_df, 
                family = "binomial")

nmc_df = anova(null_model, frame_model, ac_model, int_model, test = "Chisq")

library(brms)

  